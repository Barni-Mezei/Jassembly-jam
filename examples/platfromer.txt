#A platformer "game"

const walkingSpeed 1
const jumpVel 4
const tickSpeed 15

set_scroll 0 0
set_pixel 0 0 9
display_color

func lineNorm
set_pixel R0 1 12 #top
set_pixel R0 2 12
set_pixel R0 4 12
set_pixel R0 5 12
set_pixel R0 22 12 #bottom
set_pixel R0 23 12
set_pixel R0 25 12
set_pixel R0 26 12
set_pixel R0 28 12
set_pixel R0 29 12
set_pixel R0 43 12 #deep-bottom
set_pixel R0 44 12
set_pixel R0 46 12
set_pixel R0 47 12
return 0

func lineV1
set_pixel R0 1 1 #top
set_pixel R0 2 1
set_pixel R0 4 12
set_pixel R0 5 12
set_pixel R0 22 1 #bottom
set_pixel R0 23 1
set_pixel R0 25 12
set_pixel R0 26 12
set_pixel R0 28 1
set_pixel R0 29 1
set_pixel R0 43 12 #deep-bottom
set_pixel R0 44 12
set_pixel R0 46 1
set_pixel R0 47 1
return 0

func lineV2
set_pixel R0 1 12 #top
set_pixel R0 2 12
set_pixel R0 4 1
set_pixel R0 5 1
set_pixel R0 22 12 #bottom
set_pixel R0 23 12
set_pixel R0 25 1
set_pixel R0 26 1
set_pixel R0 28 12
set_pixel R0 29 12
set_pixel R0 43 1 #deep-bottom
set_pixel R0 44 1
set_pixel R0 46 12
set_pixel R0 47 12
return 0

func hole
set_pixel R0 21 0 #line
set_pixel R0 22 0
set_pixel R0 23 0
set_pixel R0 24 0 #line
set_pixel R0 25 0
set_pixel R0 26 0
set_pixel R0 27 0 #line
set_pixel R0 28 0
set_pixel R0 29 0
set_pixel R0 30 0 #line
return 0

func extraNorm
set_pixel R0 15 1
set_pixel R0 16 12
set_pixel R0 17 12
set_pixel R0 18 1
set_pixel R0 19 12
set_pixel R0 20 12
return 0

func extraV1
set_pixel R0 15 1
set_pixel R0 16 1
set_pixel R0 17 1
set_pixel R0 18 1
set_pixel R0 19 12
set_pixel R0 20 12
return 0

func extraV2
set_pixel R0 15 1
set_pixel R0 16 12
set_pixel R0 17 12
set_pixel R0 18 1
set_pixel R0 19 1
set_pixel R0 20 1

return 0

func resetR2
0 to R2
return 0

#LEVEL CREATION

0 to R0
99 to R2
label loopLevel
set_pixel R0 0 1 #top
set_pixel R0 3 1 #top
set_pixel R0 6 1 #top
set_pixel R0 21 1 #bottom
set_pixel R0 24 1 #bottom
set_pixel R0 27 1 #bottom
set_pixel R0 30 1 #bottom
set_pixel R0 42 1 #deep-bottom
set_pixel R0 45 1 #deep-bottom
set_pixel R0 48 1 #deep-bottom

op R1 = R0 % 6
if R1 != 0 lineNorm
if R1 == 3 lineV2
if R1 == 0 lineV1
if R0 == 12 resetR2
if R0 == 48 resetR2
if R0 > 60 hole
jump placeExtra
label levelLoopBack
#op R10 = R0 - 10
#clamp 0 40 R10 R10
#set_scroll R10 0
#display_color
op R0 += 1
if R0 < 80 loopLevel
jump levelEnd

label placeExtra
op R2 += 1
if R2 > 19 levelLoopBack
if R1 != 0 extraNorm
if R1 == 3 extraV2
if R1 == 0 extraV1
jump levelLoopBack

label levelEnd
#MAINLOOP

0 to R30 #old px
15 to R31 #old py

0 to R40 #px
7 to R41 #py
0 to R50 #pvx
0 to R51 #pvy

0 to R0
label loopGame
input_key R5

0 to R50
if R5 == 38 controlJump
if R5 == 37 controlLeft
if R5 == 39 controlRight


call movePlayer
call controlGrav
clamp 0 79 R40 R40 #px
clamp 59 7 R41 R41 #py

set_pixel R30 R31 0 #erase prev. player
set_pixel R40 R41 9 #draw player
op R44 = R40 - 20 #calc. scroll X
op R45 = R41 - 10 #calc. scroll Y
clamp 0 40 R44 R44
clamp 0 30 R45 R45
set_scroll R44 R45 #set scroll
display_color

R40 to R30
R41 to R31
op R0 += 0
sleep tickSpeed
jump loopGame

#FUNCTIONS

func controlGrav
op R63 = R41 + 1
get_pixel R40 R63 R63 #pixel in front
if R63 != 0 controlGravBreak
op R51 += 1 #gravity
return 0
label controlGravBreak
0 to R51
return 0

func movePlayer
0 to R62
label loopPX
sgn R50 R61
op R63 = R40 + R61
clamp 0 79 R63 R63
get_pixel R63 R41 R63 #pixel in front
if R63 != 0 loopPXBreak
sgn R50 R61
op R40 += R61

abs R50 R61
op R62 += 1
if R62 < R61 loopPX
label loopPXBreak
clamp 0 79 R40 R40 #px

0 to R62
label loopPY
sgn R51 R61
op R63 = R41 + R61
clamp 0 59 R63 R63
get_pixel R40 R63 R63 #pixel in front
if R63 != 0 loopPYBreak
sgn R51 R61
op R41 += R61

abs R51 R61
op R62 += 1
if R62 < R61 loopPY
label loopPYBreak
clamp 59 0 R41 R41 #py
return 0


func controlJump
op R63 = R41 + 1
get_pixel R40 R63 R63 #pixel below player
if R63 == 0 controlJumpBreak
op R51 = 0 - jumpVel
label controlJumpBreak
return 0


func controlLeft
op R50 = 0 - walkingSpeed
return 0


func controlRight
op R50 = walkingSpeed
return 0